{"id":"545ac1e3-27bd-4c67-8f90-3173e5e6c706","record_date":"2024-01-05T12:19:12.838235Z","rest":{"name":"","desc":"","request":{"method":"POST","base_url":"http://httpbin.org/post","params":[],"headers":[],"body":{"base64":"","size":0,"body_str":"","body_file":"","body_type":"FROM_DATA","body_raw_type":"JSON","body_form_data":[{"data_type":"Text","key":"1","value":"1","desc":"","enable":true},{"data_type":"File","key":"1","value":"/Users/jincheng.zhang/Desktop/collection-test.json","desc":"","enable":true}],"body_xxx_form":[]},"auth":{"auth_type":"InheritAuthFromParent","basic_username":"","basic_password":"","bearer_token":""}},"response":{"body":{"base64":"","size":10747,"body_str":"","body_file":"","body_type":"NONE","body_raw_type":"JSON","body_form_data":[],"body_xxx_form":[]},"headers":[{"key":"date","value":"Fri, 05 Jan 2024 12:19:10 GMT","desc":"","enable":true,"lock_with":"NoLock"},{"key":"content-type","value":"application/json","desc":"","enable":true,"lock_with":"NoLock"},{"key":"content-length","value":"10747","desc":"","enable":true,"lock_with":"NoLock"},{"key":"connection","value":"keep-alive","desc":"","enable":true,"lock_with":"NoLock"},{"key":"server","value":"gunicorn/19.9.0","desc":"","enable":true,"lock_with":"NoLock"},{"key":"access-control-allow-origin","value":"*","desc":"","enable":true,"lock_with":"NoLock"},{"key":"access-control-allow-credentials","value":"true","desc":"","enable":true,"lock_with":"NoLock"}],"status":200,"status_text":"200 OK","elapsed_time":0},"status":"Ready","pre_request_script":""}}